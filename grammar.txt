Program
    DeclHead DeclTail DeclList
DeclHead
    Type id
DeclTail
    ;
    [ num ] ;
    ( ParamDeclList ) Block
DeclList
    DeclHead DeclTail DeclList
    epsilon
VarDeclList
    VarDecl VarDeclList
    epsilon
VarDecl
    Type id VarDeclTail
VarDeclTail
    ;
    [ num ] ;
    ExprAsgn
ParamDeclList
    ParamDeclListTail
    epsilon
ParamDeclListTail
    ParamDecl ParamDeclListTailA
ParamDeclListTailA
    , ParamDeclListTail
    epsilon
ParamDecl
    Type id ParamDeclA
ParamDeclA
    [ ]
    epsilon
Block
    { VarDeclList StmtList BlockContentList }
BlockContentList
    VarDeclList StmtList BlockContentList
    epsilon
Type
    int
    char
StmtList
    Stmt StmtListA
StmtListA
    StmtList
    epsilon
Stmt
    ;
    Expr ;
    return Expr ;
    break ;
    if ( Expr ) Stmt else Stmt
    while ( Expr ) Stmt
    Block
Expr
    id ExprC ExprB
    Primary ExprB
    UnaryOp Expr ExprB
ExprC
    ExprD
    = Expr
ExprD
    ( ExprList )
    [ Expr ] ExprE
    epsilon
ExprE
    = Expr
    epsilon
ExprAsgn
    = Expr
    [ Expr ] = Expr
ExprB
    BinOp Expr ExprB
    epsilon
Primary
    num
    ( Expr )
PrimaryA
    ( ExprList )
    [ Expr ]
    epsilon
ExprList
    ExprListTail
    epsilon
ExprListTail
    Expr ExprListTailA
ExprListTailC
    , ExprListTail
    epsilon
UnaryOp
    -
    !
BinOp
    +
    -
    *
    /
    ==
    !=
    <
    <=
    >
    >=
    &&
    ||
