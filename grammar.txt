Program
    DeclHead
DeclHead
    Type id DeclTail
    epsilon
DeclTail
    ; DeclHead
    [ num ] ; DeclHead
    ( ParamDeclList ) Block DeclHead
VarDeclList
    VarDecl VarDeclList
    epsilon
VarDecl
    Type id VarDecl'
VarDecl'
    ;
    [ num ] ;
FunDeclList
    FunDecl FunDeclList'
FunDeclList'
    FunDeclList
    epsilon
FunDecl
    Type id ( ParamDeclList ) Block 
ParamDeclList
    ParamDeclListTail
    epsilon
ParamDeclListTail
    ParamDecl ParamDeclListTail'
ParamDeclListTail'
    , ParamDeclListTail
    epsilon	
ParamDecl
    Type id ParamDecl'
ParamDecl'
    [ ]
    epsilon
Block
    { VarDeclList StmtList }
Type
    int
    char
StmtList
    Stmt StmtList'
StmtList'
    StmtList
    epsilon
Stmt
    ;
    Expr ;
    return Expr ;
    break ;
    if ( Expr ) Stmt else Stmt
    while ( Expr ) Stmt
    Block
Expr
    Primary Expr''
    UnaryOp Expr Expr''
Expr'
    = Expr
    [ Expr ] = Expr
Expr''
    BinOp Expr Expr''
    epsilon
Primary
    id Primary'
    num
    ( Expr )
Primary'
    Primary''
    Expr' Expr''
Primary''
    ( ExprList )
    [ Expr ]
    epsilon
ExprList
    ExprListTail
    epsilon
ExprListTail
    Expr ExprListTail'
ExprListTail'
    , ExprListTail
    epsilon
UnaryOp
    -
    !
BinOp
    +
    -
    *
    /
    ==
    !=
    <
    <=
    >
    >=
    &&
    ||
