Program
    VarDeclList FunDeclList
VarDeclList
    VarDecl VarDeclList
    epsilon
VarDecl
    Type id VarDecl'
VarDecl'
    ;
    [num] ;
FunDeclList
    FunDecl FunDeclList'
FunDeclList'
    epsilon
    FundeclList
FunDecl
    Type id ( ParamDeclList ) Block
ParamDeclList
    ParamDeclListTail
    epsilon
ParamDeclListTail
    ParamDecl ParamDeclListTail'
ParamDeclListTail'
    epsilon	
    , ParamDeclListTail
ParamDecl
    Type id ParamDecl'
ParamDecl'
    epsilon
    [ ]
Block
    { VarDeclList StmtList }
Type
    int
    char
StmtList
    Stmt StmtList'
StmtList'
    epsilon
    StmtList
Stmt
    ;
    Expr ;
    return Expr ;
    break ;
    if ( Expr ) Stmt else Stmt
    while ( Expr ) Stmt
    Block
Expr
    Primary
    UnaryOp Expr
    Expr BinOp Expr
    id Expr'
Expr'
    = Expr
    [ Expr ] = Expr
Primary
    id Primary'
    num
    ( Expr )
Primary'
    epsilon
    ( ExprList )
    [ Expr ]
ExprList
    ExprListTail
    epsilon
ExprListTail
    Expr ExprListTail'
ExprListTail'
    epsilon
    , ExprListTail
UnaryOp
    -
    !
BinOp
    +
    -
    *
    /
    ==
    !=
    <
    <=
    >
    >=
    &&
    ||
